//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct PushController;

struct __shared_weak_count;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct shared_ptr<push::PushController> {
    struct PushController *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<push::PushController> {
    struct PushController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct shared_ptr<push::PushController> {
    struct PushController *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b58db925;

#pragma mark -

//
// File: /Users/eliomachado/Desktop/CommCenter
// UUID: E5C6B5B1-F648-33DE-93BD-22BBE135C9B6
//
//                           Arch: arm64
//                 Source version: 1779.0.0.0.0
//            Minimum iOS version: 7.1.0
//                    SDK version: 7.1.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol APSConnectionDelegate <NSObject>
- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;

@optional
- (void)connectionDidReconnect:(APSConnection *)arg1;
- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;
- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;
- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;
- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CTMessageAddress
- (NSString *)encodedString;
- (NSString *)canonicalFormat;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (NSString *)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@optional
- (NSString *)debugDescription;
@end

@interface CTAsciiAddress : NSObject <NSCopying, CTMessageAddress>
{
    NSString *_address;
}

+ (id)asciiAddressWithString:(id)arg1;
@property(readonly) NSString *address; // @synthesize address=_address;
- (void)dealloc;
- (id)canonicalFormat;
- (id)encodedString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAddress:(id)arg1;

@end

@interface CTPhoneNumber : NSObject <NSCopying, CTMessageAddress>
{
    NSString *_digits;
    NSString *_countryCode;
    _Bool _isShortCode;
}

+ (_Bool)isValidPhoneNumber:(id)arg1;
+ (_Bool)isValidPhoneNumberChar:(unsigned short)arg1;
+ (id)phoneNumberWithDigits:(id)arg1 countryCode:(id)arg2;
@property _Bool isShortCode; // @synthesize isShortCode=_isShortCode;
@property(readonly) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(readonly) NSString *digits; // @synthesize digits=_digits;
- (id)encodedString;
- (id)canonicalFormat;
- (id)formatForCallingCountry:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDigits:(id)arg1 countryCode:(id)arg2;
- (long long)numberOfDigitsForShortCodeNumber;

@end

@interface CTLocationManager : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_manager;
    CLLocation *_location;
    _Bool _locationRequested;
    _Bool _locationAvailable;
}

+ (id)sharedManager;
@property(nonatomic) _Bool locationAvailable; // @synthesize locationAvailable=_locationAvailable;
@property(nonatomic) _Bool locationRequested; // @synthesize locationRequested=_locationRequested;
@property(copy) CLLocation *location; // @synthesize location=_location;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (id)copyLastKnownLocation;
- (_Bool)isLocationServiceEnabled;
- (void)stopLocationUpdates;
- (void)startLocationUpdates;
- (void)shouldUpdateLocation:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SubscriberTransactionElement : NSObject
{
    int _type;
    NSMutableDictionary *_info;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSMutableDictionary *info; // @synthesize info=_info;
- (id)description;
- (void)setPayload:(const basic_string_7c0a1c0b *)arg1;
- (void)setAction:(id)arg1;
- (id)action;
- (void)setIdentifier:(int)arg1;
- (id)identifier;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (id)initWithAction:(id)arg1 andIdentifier:(int)arg2;

@end

@interface SubscriberRequestTransactionElement : SubscriberTransactionElement
{
}

+ (id)requestWithAction:(id)arg1 andIdentifier:(int)arg2;
- (id)initRequestWithAction:(id)arg1 andIdentifier:(int)arg2;

@end

@interface SubscriberResponseTransactionElement : SubscriberTransactionElement
{
}

+ (id)responseWithInfo:(id)arg1;
- (id)initResponseWithInfo:(id)arg1;

@end

@interface CTPushManager : NSObject <APSConnectionDelegate>
{
    APSConnection *_connection;
    NSArray *_currentTopics;
    NSString *_environment;
    struct dispatch_queue_s *_queue;
    struct weak_ptr<push::PushController> _controller;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)useDevelopmentEnvironment:(_Bool)arg1;
- (void)setEnabledTopics:(struct __CFArray *)arg1;
- (void)_reconnect;
- (void)_setEnabledTopics_sync:(id)arg1;
- (void)startConnection;
- (void)_disconnect;
- (void)_connect;
- (void)dealloc;
- (id)initWithPushController:(shared_ptr_b58db925)arg1 andQueue:(struct dispatch_queue_s *)arg2;

@end

